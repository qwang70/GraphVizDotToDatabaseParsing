digraph {
rankdir=TB
nodesep=0.5
ranksep=0.6
node[shape=circle,fontname=Helvetica,fontsize=14]
edge[fontname=Helvetica,fontsize=12, pensize = 5]
//a->b
//b->b
//"prog"[	shape=box,style=rounded,width=0,height=0,constraint=false,fontsize=14,
//	label="tc(X,Y) :- e(X,Y) # (1)--e(X,Y)-->(2) \n tc(X,Y) :-            # (1)--exists:// Z-->(3)\n        e(X,Z),          # (3)->(4)-e(X,Z)->(5)\n       tc(Z,Y).         # (3)--X:=Z-->(1)       "
//	]

// {rank=same; a; prog}


// 2[style=filled,fillcolor="#777777"]
// 3[style=filled,fillcolor="#777777"]
// 5[style=filled,fillcolor="#777777"]
// 1->2[label="e(X,Y)"]
// 1->3[taillabel="            exists:Z"]
// 3->1[taillabel="X := Z         "]
// 3->4
// 4->5[label="e(X,Z)"]

// {rank=same; 1; 3}

edge [fontname=Helvetica,fontsize=12,penwidth=2]

// {rank=same; 1; "3:(b,b,b)"}


node [
     style="filled,rounded",shape=box,
     fillcolor="#AAFFAA",	
     fontname=Courier,
     fontsize=14,
     height=0.5,width=0.51]

"1:(a,b)"[label="a"]
"1:(b,b)"[label="d"]
"4:(a,b)"[label="e"]


node [
     shape=circle, style=filled,
     fillcolor="#FFFFAA"	
     fontname=Courier,
     fontsize=14,
     height=0.45,width=0.45]

"1:(a,a)"[label="k"]
"1:(b,a)"[label="m"]
"3:(a,a,b)"[label="l"]
"3:(b,a,b)"[label="n"]



//"4:(b,b)"[style="filled,rounded",fillcolor="#AAFFAA",label="i"]
//"3:(a,a,a)"[style="filled,rounded",fillcolor="#AAFFAA",label="3:(a,a,a) 1"]
//"3:(a,b,a)"[style="filled,rounded",fillcolor="#AAFFAA",label="3:(a,b,a) 1"]
//"3:(b,a,a)"[style="filled,rounded",fillcolor="#AAFFAA",label="3:(b,a,a) 1"]
//"3:(b,b,a)"[style="filled,rounded",fillcolor="#AAFFAA",label="3:(b,b,a) 1"]
//node[shape=box]

node [shape=octagon,
     style=filled,
     fillcolor="#FFAAAA",
     fontname=Courier,fontsize=14,
     height=0,width=0]

"2:(a,b)"[label="b"]
"2:(b,b)"[label="f"]
"3:(a,b,b)"[label="c"]
"3:(b,b,b)"[label="g"]
"5:(a,b)"[label="h"]

//"4:(a,a)"[style=filled,fillcolor="#FFAAAA",label="4:(a,a) 0"]
//"4:(b,a)"[style=filled,fillcolor="#FFAAAA",label="4:(b,a) 0"]
//"5:(b,b)"[style=filled,fillcolor="#FFAAAA",label="j"]


//node[shape=box,style="filled,rounded"]
//"1:(a,b)" -> "3:(a,b,a)" [color="#BBBBBB",style=dotted,constraint=false]
//"1:(b,b)" -> "3:(b,b,a)" [color="#BBBBBB",style=dotted,constraint=false]
//"3:(a,a,a)" -> "1:(a,a)" [color="#BBBBBB",style=dotted,constraint=false]
//"3:(a,b,a)" -> "1:(a,b)" [color="#BBBBBB",style=dotted,constraint=false]
//"3:(b,a,a)" -> "1:(a,a)" [color="#BBBBBB",style=dotted,constraint=false]
//"3:(b,b,a)" -> "1:(a,b)" [color="#BBBBBB",style=dotted,constraint=false]
//"1:(a,a)" -> "3:(a,a,a)" [color="#BBBBBB",constraint=false]
//"1:(b,a)" -> "3:(b,a,a)" [color="#BBBBBB",constraint=false]
"3:(a,a,b)" -> "4:(a,b)" [color="#777777",style=dashed, constraint=true]
//"3:(b,a,b)" -> "4:(b,b)" [color="#777777",style=dashed, constraint=true]
"3:(b,a,b)" -> "1:(b,a)" [dir=back,color="#AAAA00" headlabel="         oo"]
"1:(b,a)" -> "3:(b,a,b)" [dir=back,color="#AAAA00" headlabel="oo        "]
"1:(a,a)" -> "3:(a,a,b)" [color="#AAAA00", taillabel="         oo"]
"3:(a,a,b)" -> "1:(b,a)" [color="#AAAA00" taillabel="          oo"]
"1:(a,b)" -> "2:(a,b)" [color="#00BB00",taillabel=" 1  "]
"1:(b,b)" -> "2:(b,b)" [color="#00BB00",taillabel="1   "]
"4:(a,b)" -> "5:(a,b)" [color="#00BB00",taillabel="1  "]
"4:(a,b)" -> "1:(b,a)" [color="#777777",style=dashed, constraint=false taillabel=""]
"4:(a,b)" -> "1:(b,b)" [color="#777777",style=dashed, constraint=false taillabel=""]
//"4:(b,b)" -> "5:(b,b)" [color="#00BB00",taillabel=""]
//"3:(a,a,a)" -> "4:(a,a)" [color="#00BB00",taillabel=""]
//"3:(a,b,a)" -> "4:(a,a)" [color="#00BB00",taillabel=""]
//"3:(b,a,a)" -> "4:(b,a)" [color="#00BB00",taillabel=""]
//"3:(b,b,a)" -> "4:(b,a)" [color="#00BB00",taillabel=""]
"1:(a,b)" -> "3:(a,b,b)" [color="#00BB00",taillabel="2 "]
"1:(b,b)" -> "3:(b,b,b)" [color="#00BB00",taillabel="      2"]
"3:(a,b,b)" -> "1:(b,b)" [color="#CC0000",taillabel="1 "]
"3:(a,b,b)" -> "4:(a,b)" [color="#CC0000",taillabel="1"]
"3:(b,b,b)" -> "1:(b,b)" [color="#CC0000",taillabel=" 1"]
//"3:(b,b,b)" -> "4:(b,b)" [color="#CC0000",taillabel=""]


"1:(b,b)" -> "4:(a,b)"[constraint=false,color="#777777",style=dashed] // new: d -> e
"1:(b,a)" -> "4:(a,b)" [constraint=false,color="#777777",style=dashed] // new: e <- m


}